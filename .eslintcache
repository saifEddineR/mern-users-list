[{"D:\\GOMYCODE\\MERN\\mern-users-list\\src\\index.js":"1","D:\\GOMYCODE\\MERN\\mern-users-list\\src\\App.js":"2","D:\\GOMYCODE\\MERN\\mern-users-list\\src\\reportWebVitals.js":"3","D:\\GOMYCODE\\MERN\\mern-users-list\\src\\Components\\Users.js":"4","D:\\GOMYCODE\\MERN\\mern-users-list\\src\\Components\\UserCard.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":154,"mtime":1611270844066,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":417,"mtime":1611328398801,"results":"10","hashOfConfig":"7"},{"size":1112,"mtime":1611279693381,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1cxfhja",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"D:\\GOMYCODE\\MERN\\mern-users-list\\src\\index.js",[],["24","25"],"D:\\GOMYCODE\\MERN\\mern-users-list\\src\\App.js",[],"D:\\GOMYCODE\\MERN\\mern-users-list\\src\\reportWebVitals.js",[],"D:\\GOMYCODE\\MERN\\mern-users-list\\src\\Components\\Users.js",["26","27"],"D:\\GOMYCODE\\MERN\\mern-users-list\\src\\Components\\UserCard.js",["28","29","30","31"],"import React, { useState } from 'react';\r\nimport '../css/userCard.css';\r\n//ract bootstrap\r\nimport { Modal } from 'react-bootstrap';\r\n// react icons import\r\nimport { RiDeleteBin5Line } from 'react-icons/ri';\r\nimport { AiFillEdit } from 'react-icons/ai';\r\n\r\nconst UserCard = () => {\r\n  // show or hide modal hook and functions\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <div className='card' id={true ? 'black' : 'white'}>\r\n      <span onClick={handleShow}>\r\n        <img\r\n          src='https://i.pinimg.com/originals/d5/25/61/d52561e104775f407908c8c395afc6fa.jpg'\r\n          alt='user'\r\n        />\r\n      </span>\r\n      <h4 className='user-name'>Kim Ji-soo</h4>\r\n      <h6 className='user-rank'>actor</h6>\r\n      <p className='user-age'>age {27} yo</p>\r\n      <a href='' className='user-email'>\r\n        mail@gmail.com\r\n      </a>\r\n      <br />\r\n      <AiFillEdit className='edit-icon icons' />\r\n      <RiDeleteBin5Line className='delete-icon icons' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":6,"column":10,"nodeType":"38","messageId":"39","endLine":6,"endColumn":14},{"ruleId":"36","severity":1,"message":"40","line":6,"column":16,"nodeType":"38","messageId":"39","endLine":6,"endColumn":23},{"ruleId":"36","severity":1,"message":"41","line":4,"column":10,"nodeType":"38","messageId":"39","endLine":4,"endColumn":15},{"ruleId":"36","severity":1,"message":"42","line":11,"column":10,"nodeType":"38","messageId":"39","endLine":11,"endColumn":14},{"ruleId":"36","severity":1,"message":"43","line":12,"column":9,"nodeType":"38","messageId":"39","endLine":12,"endColumn":20},{"ruleId":"44","severity":1,"message":"45","line":26,"column":7,"nodeType":"46","endLine":26,"endColumn":41},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","'Modal' is defined but never used.","'show' is assigned a value but never used.","'handleClose' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]