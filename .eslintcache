[{"D:\\GOMYCODE\\MERN\\mern-users-list\\src\\index.js":"1","D:\\GOMYCODE\\MERN\\mern-users-list\\src\\App.js":"2","D:\\GOMYCODE\\MERN\\mern-users-list\\src\\reportWebVitals.js":"3","D:\\GOMYCODE\\MERN\\mern-users-list\\src\\Components\\Users.js":"4","D:\\GOMYCODE\\MERN\\mern-users-list\\src\\Components\\UserCard.js":"5","D:\\GOMYCODE\\MERN\\mern-users-list\\src\\Components\\UserInput.js":"6","D:\\GOMYCODE\\MERN\\mern-users-list\\src\\Components\\EditUser.js":"7"},{"size":504,"mtime":1611503341807,"results":"8","hashOfConfig":"9"},{"size":238,"mtime":1611490502584,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":658,"mtime":1611490426878,"results":"12","hashOfConfig":"9"},{"size":1538,"mtime":1611517680253,"results":"13","hashOfConfig":"9"},{"size":3807,"mtime":1611516974964,"results":"14","hashOfConfig":"9"},{"size":3942,"mtime":1611517834449,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"x9r0tf",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"D:\\GOMYCODE\\MERN\\mern-users-list\\src\\index.js",[],["34","35"],"D:\\GOMYCODE\\MERN\\mern-users-list\\src\\App.js",[],"D:\\GOMYCODE\\MERN\\mern-users-list\\src\\reportWebVitals.js",[],"D:\\GOMYCODE\\MERN\\mern-users-list\\src\\Components\\Users.js",["36"],"import React, { useState, useEffect } from 'react';\r\nimport UserCard from './UserCard';\r\nimport axios from 'axios';\r\nimport UserInput from './UserInput';\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get('/users')\r\n      .then((res) => setUsers(res.data))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  console.log(users);\r\n  return (\r\n    <div className='users-list'>\r\n      {/* ---------- map on users list ---------- */}\r\n      {users.length > 0\r\n        ? users.map((user, i) => <UserCard key={user._id} {...user} />)\r\n        : true}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","D:\\GOMYCODE\\MERN\\mern-users-list\\src\\Components\\UserCard.js",["37","38","39","40","41"],"import React, { useState } from 'react';\r\nimport '../css/userCard.css';\r\n//ract bootstrap\r\nimport { Modal } from 'react-bootstrap';\r\n// react icons import\r\nimport { RiDeleteBin5Line } from 'react-icons/ri';\r\nimport { AiFillEdit } from 'react-icons/ai';\r\nimport axios from 'axios';\r\nimport EditUser from './EditUser';\r\n\r\nconst UserCard = ({ _id, name, age, email, occupation, img }) => {\r\n  // show or hide modal hook and functions\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const deleteUser = () => {\r\n    axios\r\n      .delete(`/users/deleteUser/${_id}`)\r\n      .then((res) => console.log(res.data));\r\n  };\r\n  let userO = { _id, name, age, email, occupation, img };\r\n\r\n  return (\r\n    <div className='card' id={true ? 'black' : 'white'}>\r\n      <span onClick={handleShow}>\r\n        <img src={img} alt='user' />\r\n      </span>\r\n      <h4 className='user-name'>{name}</h4>\r\n      <h6 className='user-rank'>{occupation}</h6>\r\n      <p className='user-age'>age {age} yo</p>\r\n      <a href='' className='user-email'>\r\n        {email}\r\n      </a>\r\n      <br />\r\n      <button className='card-btn edit-btn'>\r\n        {/* <AiFillEdit className='edit-icon icons' /> */}\r\n        <EditUser {...userO} />\r\n      </button>\r\n      <button className='card-btn delete-btn' onClick={deleteUser}>\r\n        <a href='/'>\r\n          <RiDeleteBin5Line className='delete-icon icons' />\r\n        </a>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","D:\\GOMYCODE\\MERN\\mern-users-list\\src\\Components\\UserInput.js",[],"D:\\GOMYCODE\\MERN\\mern-users-list\\src\\Components\\EditUser.js",["42"],"import '../css/userCard.css';\r\nimport '../css/addUser.css';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { MdPersonAdd } from 'react-icons/md';\r\nimport { AiFillEdit } from 'react-icons/ai';\r\nimport { Modal, Form } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst EditUser = ({ _id, name, age, occupation, email, img }) => {\r\n  const [newUser, setNewUser] = useState({\r\n    name: name,\r\n    age: age,\r\n    occupation: occupation,\r\n    email: email,\r\n    img: img,\r\n  });\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  // modal show/hide hook and functions ----------------------\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    console.log(newUser);\r\n    axios\r\n      .put(`/users/updateUser/${_id}`, newUser)\r\n      .then((res) => console.log(res))\r\n      .catch((err) => alert('error : you missed a required'));\r\n    setNewUser({\r\n      name: '',\r\n      age: '',\r\n      occupation: '',\r\n      email: '',\r\n      img: '',\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  // handle input data and send post request\r\n  const handleInput = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    setNewUser({ ...newUser, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <span onClick={showModal} className='card-btn edit-btn'>\r\n        <AiFillEdit className='edit-icon icons' />\r\n      </span>\r\n      <Modal\r\n        title='Add User'\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <form onSubmit={handleOk}>\r\n          <Form.Item\r\n            label='Full Name'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your username!',\r\n              },\r\n            ]}\r\n          >\r\n            <input\r\n              value={newUser.name}\r\n              name='name'\r\n              onChange={handleInput}\r\n              required\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label='Occupation'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your occupation!',\r\n              },\r\n            ]}\r\n          >\r\n            <input\r\n              value={newUser.occupation}\r\n              name='occupation'\r\n              onChange={handleInput}\r\n              required\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label='Age'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your age!',\r\n              },\r\n            ]}\r\n          >\r\n            <input\r\n              value={newUser.age}\r\n              name='age'\r\n              onChange={handleInput}\r\n              required\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label='Email'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your email!',\r\n              },\r\n            ]}\r\n          >\r\n            <input\r\n              value={newUser.email}\r\n              name='email'\r\n              onChange={handleInput}\r\n              required\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label='Picture'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your picture!',\r\n              },\r\n            ]}\r\n          >\r\n            <input\r\n              value={newUser.img}\r\n              name='img'\r\n              onChange={handleInput}\r\n              required\r\n            />\r\n          </Form.Item>\r\n          <button type='submit' onClick={handleOk} id='submit-btn'>\r\n            <a href='/'>submit</a>\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":17},{"ruleId":"47","severity":1,"message":"51","line":4,"column":10,"nodeType":"49","messageId":"50","endLine":4,"endColumn":15},{"ruleId":"47","severity":1,"message":"52","line":7,"column":10,"nodeType":"49","messageId":"50","endLine":7,"endColumn":20},{"ruleId":"47","severity":1,"message":"53","line":13,"column":10,"nodeType":"49","messageId":"50","endLine":13,"endColumn":14},{"ruleId":"47","severity":1,"message":"54","line":14,"column":9,"nodeType":"49","messageId":"50","endLine":14,"endColumn":20},{"ruleId":"55","severity":1,"message":"56","line":31,"column":7,"nodeType":"57","endLine":31,"endColumn":41},{"ruleId":"47","severity":1,"message":"58","line":5,"column":10,"nodeType":"49","messageId":"50","endLine":5,"endColumn":21},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'UserInput' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'AiFillEdit' is defined but never used.","'show' is assigned a value but never used.","'handleClose' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'MdPersonAdd' is defined but never used.","no-global-assign","no-unsafe-negation"]